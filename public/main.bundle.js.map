{"version":3,"sources":["D:/code/pizzaTwilio/src lazy","D:/code/pizzaTwilio/src/app/app.component.css","D:/code/pizzaTwilio/src/app/app.component.html","D:/code/pizzaTwilio/src/app/app.component.ts","D:/code/pizzaTwilio/src/app/app.module.ts","D:/code/pizzaTwilio/src/app/pizza-status/pizza-status.component.css","D:/code/pizzaTwilio/src/app/pizza-status/pizza-status.component.html","D:/code/pizzaTwilio/src/app/pizza-status/pizza-status.component.ts","D:/code/pizzaTwilio/src/app/services/auth.service.ts","D:/code/pizzaTwilio/src/environments/environment.ts","D:/code/pizzaTwilio/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/code/pizzaTwilio/src lazy\n// module id = ../../../../../src lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".wrapper {\\r\\n    margin: 20px auto;\\r\\n    width: 30%;\\r\\n    border: 2px solid red;\\r\\n    padding: 20px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/code/pizzaTwilio/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<h1 *ngIf=\\\"authService.user | async\\\">Welcome {{ (authService.user | async)?.email }}!</h1>\\r\\n\\r\\n<div *ngIf=\\\"!(authService.user | async)\\\">\\r\\n  <input type=\\\"text\\\"  name=\\\"aa\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"email\\\">\\r\\n  <input type=\\\"password\\\"  name=\\\"first\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"email\\\">\\r\\n\\r\\n  <button (click)=\\\"signup()\\\" [disabled]=\\\"!email || !password\\\">\\r\\n    Signup\\r\\n  </button>\\r\\n\\r\\n  <button (click)=\\\"login()\\\" [disabled]=\\\"!email || !password\\\">\\r\\n    Login\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<button (click)=\\\"logout()\\\" *ngIf=\\\"authService.user | async\\\">\\r\\n  Logout\\r\\n</button>\\r\\nOur input fields two-way bind to the email and password\\r\\n<div class=\\\"wrapper\\\" *ngIf=\\\"authService.user | async\\\">\\r\\n    <span>message:</span>\\r\\n    <input type=\\\"text\\\" name=\\\"message\\\" [(ngModel)]=\\\"message\\\" placeholder=\\\"some text\\\"><br>\\r\\n    <span>phone number:</span>\\r\\n    <input type=\\\"text\\\" name=\\\"sendTo\\\" [(ngModel)]=\\\"sendTo\\\" placeholder=\\\"phone number\\\"><br>\\r\\n    <button (click)=\\\"updateData()\\\">updateData</button>\\r\\n    <button (click)=\\\"sendMessage()\\\">send message</button>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/code/pizzaTwilio/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, FirebaseObjectObservable } from 'angularfire2/database';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, Jsonp } from '@angular/http';\nimport * as firebase from 'firebase/app';\nimport 'rxjs/add/operator/map';\n\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css']\n})\nexport class AppComponent implements OnInit{\n  email: string = '';\n  password: string = '';\n  message: string;\n  sendTo: string;\n  user: Observable<firebase.User>;\n  pizzaData: FirebaseObjectObservable<any>;\n  constructor(\n    private db: AngularFireDatabase,\n    private afAuth: AngularFireAuth,\n    public authService: AuthService,\n    public http: Http,\n    public Jsonp: Jsonp) {}\n  \n  ngOnInit() {\n    if(this.authService.user) this.getDB();\n  }\n  \n  getDB() {\n    this.pizzaData = this.db.object('/');\n    this.pizzaData.subscribe(obj => {\n      this.message = obj.message;\n      this.sendTo = obj.sendTo;\n    })\n  }\n  \n  updateData() {\n    this.pizzaData.update({message: this.message, sendTo: this.sendTo})\n      .then(res => console.log('data updated!'));\n  }\n\n  sendMessage() {\n    this.Jsonp.get('https://us-central1-pizzatwilio.cloudfunctions.net/sendSMS1')\n      .subscribe(d => console.log(d));\n  }\n\n  signup() {\n    this.authService.signup(this.email, this.password);\n    this.email = this.password = '';\n  }\n\n  login() {\n    this.authService.login(this.email, this.password);\n    this.email = this.password = '';\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// D:/code/pizzaTwilio/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { ReactiveFormsModule } from '@angular/forms';  \nimport { HttpModule, JsonpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { PizzaStatusComponent } from './pizza-status/pizza-status.component';\nimport { AuthService } from './services/auth.service';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n    JsonpModule\n  ],\n  declarations: [\n    AppComponent,\n    PizzaStatusComponent\n  ],\n  providers: [AuthService],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n\n\n// WEBPACK FOOTER //\n// D:/code/pizzaTwilio/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/code/pizzaTwilio/src/app/pizza-status/pizza-status.component.css\n// module id = ../../../../../src/app/pizza-status/pizza-status.component.css\n// module chunks = main","module.exports = \"<h1>Order Status: \\n  <span class=\\\"tag is-large\\\" \\n        [ngClass]=\\\"{\\n                  'is-dark'    : pizza.status == 'submitted' ,\\n                  'is-warning' : pizza.status == 'cooking',\\n                  'is-primary' : pizza.status == 'on its way',\\n                  'is-success' : pizza.status == 'delivered'\\n                  }\\\">\\n    \\n    {{ pizza.status }}\\n  </span>\\n</h1>\\n<ul>\\n  <li>Order Number: {{ pizza.$key }}</li>\\n  <li>Topping: {{ pizza.topping }}</li>\\n  <li>Price: {{ pizza.price }}</li>\\n</ul>\\n<hr>\\n<h1>Get Updates via Text Message</h1>\\n<form [formGroup]=\\\"numberForm\\\" (ngSubmit)=\\\"updatePhoneNumber()\\\" novalidate>\\n  <input type=\\\"text\\\" formControlName=\\\"country\\\"  placeholder=\\\"1\\\">\\n  <input type=\\\"text\\\" formControlName=\\\"area\\\"     placeholder=\\\"916\\\">\\n  <input type=\\\"text\\\" formControlName=\\\"prefix\\\"   placeholder=\\\"555\\\">\\n  <input type=\\\"text\\\" formControlName=\\\"line\\\"     placeholder=\\\"5555\\\">\\n  <input type=\\\"submit\\\" value=\\\"Get SMS Updates\\\" [disabled]=\\\"numberForm.invalid\\\">\\n</form>\\n<p *ngIf=\\\"numberForm.invalid && numberForm.touched\\\">That's not a valid phone number</p>\\n<h3> Updates will be texed to {{ pizza.phoneNumber || 'none' }}</h3>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/code/pizzaTwilio/src/app/pizza-status/pizza-status.component.html\n// module id = ../../../../../src/app/pizza-status/pizza-status.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, FirebaseListObservable } from 'angularfire2/database';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n@Component({\n  selector: 'pizza-status',\n  templateUrl: './pizza-status.component.html',\n  styleUrls: ['./pizza-status.component.css']\n})\nexport class PizzaStatusComponent implements OnInit {\n  numberForm: FormGroup;\n  order: any;\n  constructor(private db: AngularFireDatabase, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.buildForm()\n    this.order = this.db.object('/orders/testPizza123')\n  }\n  updatePhoneNumber() {\n      this.order.update({ phoneNumber: this.e164 })\n  }\n  buildForm() {\n    this.numberForm = this.fb.group({\n      country: this.validateMinMax(1, 2),\n      area:    this.validateMinMax(3, 3),\n      prefix:  this.validateMinMax(3, 3),\n      line:    this.validateMinMax(4, 4)\n    });\n  }\n  /// helper to add validations to form based on min/max length\n  validateMinMax(min, max) {\n    return ['', [\n      Validators.required,\n      Validators.minLength(min),\n      Validators.maxLength(max),\n      Validators.pattern('[0-9]+')  // validates input is digit\n    ]]\n  }\n  /// converts the current form values to E164\n  get e164() {\n    const form = this.numberForm.value\n    const num = form.country + form.area + form.prefix + form.line\n    return `+${num}`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// D:/code/pizzaTwilio/src/app/pizza-status/pizza-status.component.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  user: Observable<firebase.User>;\r\n\r\n  constructor(private firebaseAuth: AngularFireAuth) {\r\n    this.user = firebaseAuth.authState;\r\n  }\r\n\r\n  signup(email: string, password: string) {\r\n    this.firebaseAuth\r\n      .auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(value => {\r\n        console.log('Success!', value);\r\n      })\r\n      .catch(err => {\r\n        console.log('Something went wrong:',err.message);\r\n      });    \r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    this.firebaseAuth\r\n      .auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(value => {\r\n        console.log('Nice, it worked!');\r\n      })\r\n      .catch(err => {\r\n        console.log('Something went wrong:',err.message);\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.firebaseAuth\r\n      .auth\r\n      .signOut();\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/code/pizzaTwilio/src/app/services/auth.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDtWmHBfmDSMu8slmlMHrjdMSekwGEn9GQ\",\n    authDomain: \"pizzatwilio.firebaseapp.com\",\n    databaseURL: \"https://pizzatwilio.firebaseio.com\",\n    projectId: \"pizzatwilio\",\n    storageBucket: \"pizzatwilio.appspot.com\",\n    messagingSenderId: \"603360306030\"\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/code/pizzaTwilio/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// D:/code/pizzaTwilio/src/main.ts"],"sourceRoot":"webpack:///"}